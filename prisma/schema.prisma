generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  STUDENT
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  role          Role      @default(STUDENT)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  borrowHistory Borrow[]
}

model Book {
  id          String    @id @default(cuid())
  title       String
  author      String
  description String    @db.Text
  coverImage  String?   //URL de la imagen de portada
  fileUrl     String    //URL al archivo PDF o EPUB del libro
  isbn        String?   @unique
  publisher   String?
  year        Int?
  pages       Int?
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  borrows     Borrow[]
  reads       Read[]
}

model Category {
  id        String   @id @default(cuid())
  name      String   @unique
  books     Book[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Borrow {
  id         String    @id @default(cuid())
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  book       Book      @relation(fields: [bookId], references: [id])
  bookId     String
  borrowDate DateTime  @default(now())
  returnDate DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Read {
  id        String   @id @default(cuid())
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    String
  userId    String
  readDate  DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([bookId, userId, readDate])
}

